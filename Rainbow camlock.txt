local fov = 50
local predictionTime = 0.1214915413 -- Adjust this value to tweak the prediction
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Cam = game.Workspace.CurrentCamera

local FOVring = Drawing.new("Circle")
FOVring.Visible = true
FOVring.Thickness = 2
FOVring.Filled = false
FOVring.Radius = fov
FOVring.Position = Cam.ViewportSize / 2

local hue = 0 -- Initial hue value

local function updateDrawings()
    local camViewportSize = Cam.ViewportSize
    FOVring.Position = camViewportSize / 2
    
    -- Update the color for the rainbow effect
    hue = (hue + 0.01) % 1 -- Increment the hue value
    local color = Color3.fromHSV(hue, 1, 1) -- Convert hue to RGB
    FOVring.Color = color
end

local function onKeyDown(input)
    if input.KeyCode == Enum.KeyCode.Delete then
        RunService:UnbindFromRenderStep("FOVUpdate")
        FOVring:Remove()
    end
end

UserInputService.InputBegan:Connect(onKeyDown)

local function predictPosition(target)
    if not target or not target.Parent then return target.Position end
    local character = target.Parent
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return target.Position end
    
    local velocity = humanoidRootPart.Velocity
    return target.Position + (velocity * predictionTime)
end

local function lookAt(target)
    local lookVector = (target - Cam.CFrame.Position).unit
    local newCFrame = CFrame.new(Cam.CFrame.Position, Cam.CFrame.Position + lookVector)
    Cam.CFrame = newCFrame
end

local function getClosestPlayerInFOV(trg_part)
    local nearest = nil
    local last = math.huge
    local playerMousePos = Cam.ViewportSize / 2

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            local part = player.Character and player.Character:FindFirstChild(trg_part)
            if part then
                local predictedPos = predictPosition(part)
                local ePos, isVisible = Cam:WorldToViewportPoint(predictedPos)
                local distance = (Vector2.new(ePos.x, ePos.y) - playerMousePos).Magnitude

                if distance < last and isVisible and distance < fov then
                    last = distance
                    nearest = player
                end
            end
        end
    end

    return nearest
end

RunService.RenderStepped:Connect(function()
    updateDrawings()
    local closest = getClosestPlayerInFOV("UpperTorso")
    if closest and closest.Character:FindFirstChild("UpperTorso") then
        local predictedPos = predictPosition(closest.Character.UpperTorso)
        lookAt(predictedPos)
    end
end)

game.StarterGui:SetCore("SendNotification", {
    Title = "Sub to Ryzzchips",
    Text = "Thanks for using my Script!",
    Duration = 5 -- Optional: Duration in seconds
})