-- //  X FOR RESOLVER

local CC = game:GetService"Workspace".CurrentCamera

local LocalMouse = game.Players.LocalPlayer:GetMouse()

local Locking = false

local cc = game:GetService("Workspace").CurrentCamera

local gs = game:GetService("GuiService")

local ggi = gs.GetGuiInset

local lp = game:GetService("Players").LocalPlayer

local mouse = lp:GetMouse()

local UserInputService = game:GetService("UserInputService")

getgenv().Key = Enum.KeyCode.C -- // Key to lock on *Must Be Capital*

getgenv().Prediction = 0.1252115416 -- // Self Explanatory

getgenv().Tracer = true -- // Dont change

getgenv().Partz = "HumanoidRootPart" -- // 

getgenv().Resolver = false 

getgenv().ResolverPrediction = 0.1123 -- // Dont touch this when u dont know what ur doing

getgenv().ResolverKey = Enum.KeyCode.X -- // Key to enable / disable resolver *Must Be Capital*

getgenv().keytoclick = "C"

tool = Instance.new("Tool")

tool.RequiresHandle = false

tool.Name ="Aimlock"

tool.Activated:connect(function()

    local vim = game:service("VirtualInputManager")

vim:SendKeyEvent(true, keytoclick, false, game)

end)

tool.Parent = game.Players.LocalPlayer.Backpack

game.StarterGui:SetCore("SendNotification", {

    Title = "Sub to Ryzzchips";

    Text = "brrrr skibidi dop dop dop dop yes yes yes";

})

local player = game.Players.LocalPlayer

local function connectCharacterAdded()

    player.CharacterAdded:Connect(onCharacterAdded)

end

connectCharacterAdded()

player.CharacterRemoving:Connect(function()

    tool.Parent = game.Players.LocalPlayer.Backpack

end)

local Tracer = Drawing.new("Circle")

Tracer.Visible = false

Tracer.Radius = 4.0

Tracer.Filled = true

Tracer.Color = Color3.fromRGB(38, 158, 228)

Tracer.Thickness = 3

Tracer.Transparency = 1

function x(tt,tx,cc)

    game.StarterGui:SetCore("SendNotification", {

        Title = tt;

        Text = tx;

        Duration = cc;

    })

end

x("Welcome Dumbass", "Loaded", 3)

if getgenv().flashyes == true then

    x("hello", "Already Loaded", 5)

    return

end

getgenv().flashyes = true

UserInputService.InputBegan:Connect(function(keygo,ok)

    if (not ok) then

        

        if keygo.KeyCode == getgenv().ResolverKey then 

            getgenv().Resolver = not getgenv().Resolver

            

            if getgenv().Resolver then 

                x("RESOLVER", "Resolver on", 2)

            else 

                x("RESOLVER", "Resolver off", 2)

            end

        end 

        

        if (keygo.KeyCode == getgenv().Key) then

            Locking = not Locking

                if Locking then

                getgenv().Plr = getClosestPlayerToCursor()

                x("Locked Onto:", ""..Plr.Character.Humanoid.DisplayName, 3)

            elseif not Locking then

                if Plr then Plr = nil

                    x("ScapeW", "Unlocked", 3)

                end

            end

        end

    end

end)

function getClosestPlayerToCursor()

    local closestPlayer

    local shortestDistance = 137

    for i, v in pairs(game.Players:GetPlayers()) do

        if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("LowerTorso") then

            local pos = CC:WorldToViewportPoint(v.Character.UpperTorso.Position)

            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalMouse.X, LocalMouse.Y)).magnitude

            if magnitude < shortestDistance then

                closestPlayer = v

                shortestDistance = magnitude

            end

        end

    end

    return closestPlayer

end

local Old; 

Old = hookmetamethod(game,"__namecall",function(...)

    local Args = {...}

    if Locking and getnamecallmethod() == "FireServer" and getgenv().Plr ~= nil and Args[2] == "UpdateMousePos" then 

        if getgenv().Resolver then 

            Args[3] = Plr.Character[getgenv().Partz].Position+(Plr.Character.Humanoid.MoveDirection*getgenv().ResolverPrediction*19.64285714289)

            print("Resolver on")

        else 

            Args[3] = Plr.Character[getgenv().Partz].Position+(Plr.Character[getgenv().Partz].Velocity*Prediction)

            print("Resolver off")

        end 

        

        return Old(unpack(Args))

    end 

    return Old(...)

end)

game:GetService("RunService").RenderStepped:connect(function()    

    if getgenv().Tracer == true and Locking then

        if not Resolver then 

            local Vector, OnScreen = cc:worldToViewportPoint(Plr.Character[getgenv().Partz].Position+(Plr.Character[getgenv().Partz].Velocity*Prediction))

            Tracer.Visible = true

            Tracer.Position = Vector2.new(Vector.X, Vector.Y)

        else 

            local Vector, OnScreen = cc:worldToViewportPoint(Plr.Character[getgenv().Partz].Position+(Plr.Character.Humanoid.MoveDirection*getgenv().ResolverPrediction*19.64285714289))

            Tracer.Visible = true

            Tracer.Position = Vector2.new(Vector.X, Vector.Y)

        end 

    else

        Tracer.Visible = false

    end

end)
